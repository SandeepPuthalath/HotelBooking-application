{"version":3,"file":"static/js/323.aee06817.chunk.js","mappings":"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","sources":["components/admin/banner/BannerDetails.jsx","components/preview/PreviewImage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Loading from \"../../auth/Loading\";\r\nimport {\r\n  handleBannerDeleteing,\r\n  handleBannerDetailsUpdate,\r\n  handleBannerImageChange,\r\n  handleFetchingBannerDetails,\r\n} from \"../../../redux/reducers/admin/AdminBannerReducer\";\r\nimport Swal from \"sweetalert2\";\r\nimport { handleImageUpload } from \"../../../redux/reducers/imageUpload/imageUploadSlice\";\r\nimport { Button, Input, Textarea } from \"@material-tailwind/react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport PreviewImage from \"../../preview/PreviewImage\";\r\nimport { Spinner } from \"@material-tailwind/react\";\r\n\r\nexport function DefaultSpinner() {\r\n  return (\r\n    <div className=\"absolute flex justify-center inset-0 bg-gray-400 bg-opacity-50  backdrop-filter backdrop-blur-0 items-center w-full h-full\">\r\n      <Spinner className=\"h-10 w-10\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string().required(\"please fill this field\"),\r\n  desc: Yup.string().required(\"please fill this field\"),\r\n});\r\nconst imageValidationSchema = Yup.object().shape({\r\n  changedImage: Yup.mixed()\r\n    .required(\"Please choose an image\")\r\n    .test(\r\n      \"FILE_TYPE\",\r\n      \"Invalid file type! please choose jpg\",\r\n      (value) => value && [\"image/jpeg\", \"image/png\"].includes(value.type)\r\n    ),\r\n});\r\n\r\nconst BannerDetails = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { bannerId } = useParams();\r\n  const loading = useSelector((s) => s.adminBanner?.loading);\r\n  const uploading = useSelector((s) => s.uploadImg.loading);\r\n  const banner = useSelector((s) => s.adminBanner?.banner);\r\n  const fileInputRef = React.useRef();\r\n  const [edit, setEdit] = React.useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      desc: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      const payload = {\r\n        bannerId: banner?._id,\r\n        updates: values,\r\n      };\r\n      dispatch(handleBannerDetailsUpdate(payload)).then((response) => {\r\n        if (response?.errors) {\r\n          return Swal.fire(\"Error!\", response?.errors?.message, \"error\");\r\n        }\r\n        setEdit(false)\r\n        return Swal.fire(\"Success!\", response.payload?.message, \"success\");\r\n      });\r\n    },\r\n  });\r\n\r\n  const image = useFormik({\r\n    initialValues: {\r\n      changedImage: \"\",\r\n    },\r\n    validationSchema: imageValidationSchema,\r\n    onSubmit: (values) => {\r\n      handleImgUpload(values?.changedImage);\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    dispatch(handleFetchingBannerDetails(bannerId)).then((response) =>{\r\n       const {banner} = response?.payload\r\n      formik.setFieldValue(\"title\", banner?.title);\r\n      formik.setFieldValue(\"desc\", banner?.desc);\r\n    });\r\n  }, []);\r\n\r\n  const handleImgChoose = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleInputChange = () => {\r\n    const file = fileInputRef.current.files[0];\r\n    image.setFieldValue(\"changedImage\", file);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    console.log(\"delete\");\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      showCancelButton: true,\r\n      width: \"28rem\",\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(handleBannerDeleteing(banner?._id)).then(async (response) => {\r\n          if (response?.errors) {\r\n            return Swal.fire(\"Error!\", response?.errors?.message, \"error\");\r\n          }\r\n          return Swal.fire(\r\n            \"Success!\",\r\n            response.payload?.message,\r\n            \"success\"\r\n          ).then((response) => {\r\n            navigate(-1);\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleImgUpload = (file) => {\r\n    Swal.fire({\r\n      title: \"Do you wish to Confirm?\",\r\n      text: \"You won't be able to revert this!\",\r\n      width: \"28rem\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(handleImageUpload(file)).then((response) => {\r\n          if (response?.errors) {\r\n            return Swal.fire(\"Error!\", response?.errors?.message, \"error\");\r\n          }\r\n          if (!file) {\r\n            return Swal.fire(\r\n              \"Error\",\r\n              \"Please change the existing image\",\r\n              \"error\"\r\n            );\r\n          }\r\n          const secure_url = response.payload?.secure_url;\r\n          const payload = {\r\n            bannerId: banner?._id,\r\n            cloudinaryImgUrl: secure_url,\r\n          };\r\n\r\n          dispatch(handleBannerImageChange(payload)).then((response) => {\r\n            if (response?.errors) {\r\n              return Swal.fire(\"Error!\", response?.errors?.message, \"error\");\r\n            }\r\n            image.resetForm();\r\n            return Swal.fire(\"Success!\", response.payload?.message, \"success\").then(() => window.location.reload());\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full min-h-screen py-5 px-5\">\r\n      <div className=\"relative min-h-[28rem] flex flex-col bg-gray-50 shadow-lg rounded-md border-2\">\r\n        <div className=\"flex justify-center items-center\">\r\n          <h3 className=\"text-xl my-5 uppercase font-semibold\">\r\n            Update banner\r\n          </h3>\r\n        </div>\r\n        <div\r\n          onClick={() => navigate(-1)}\r\n          className=\"absolute top-5 left-5 text-blue-700\"\r\n        >\r\n          <BiArrowBack size={25} />\r\n        </div>\r\n        <div\r\n          onClick={handleDelete}\r\n          className=\"absolute top-5 right-5 text-blue-700\"\r\n        >\r\n          <MdDelete color=\"red\" size={25} />\r\n        </div>\r\n        <div className=\"grid md:grid-cols-2\">\r\n          <div className=\"md:col-span-1\">\r\n            <div className=\"w-full px-2 py-2\">\r\n              <div className=\"relative\">\r\n                {uploading && <DefaultSpinner />}\r\n                {image.errors.changedImage && (\r\n                  <span className=\"text-red-600\">\r\n                    {image.errors.changedImage}\r\n                  </span>\r\n                )}\r\n                {image.values.changedImage ? (\r\n                  <PreviewImage file={image.values.changedImage} />\r\n                ) : (\r\n                  <img\r\n                    src={banner?.cloudinaryImgUrl}\r\n                    className=\"border-2 rounded-md\"\r\n                    alt=\"\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"flex gap-2 py-2\">\r\n                <input\r\n                  ref={fileInputRef}\r\n                  onChange={handleInputChange}\r\n                  type=\"file\"\r\n                  hidden\r\n                />\r\n                <button\r\n                  onClick={handleImgChoose}\r\n                  className=\"font-bold uppercase bg-gray-200 border-2 border-gray-200 shadow-md rounded-sm text-blue-900 px-4 py-2\"\r\n                >\r\n                  choose\r\n                </button>\r\n                <button\r\n                  onClick={image.handleSubmit}\r\n                  className=\" bg-gray-900 font-bold uppercase border-1 shadow-md rounded-sm text-gray-100 px-4 py-2\"\r\n                >\r\n                  upload\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"md:col-span-1\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <div className=\"flex flex-col px-10 py-10 gap-5\">\r\n                <Input\r\n                  disabled={!edit}\r\n                  {...formik.getFieldProps(\"title\")}\r\n                  variant=\"standard\"\r\n                  label=\"Banner title\"\r\n                />\r\n                <Textarea\r\n                  disabled={!edit}\r\n                  {...formik.getFieldProps(\"desc\")}\r\n                  variant=\"standard\"\r\n                  label=\"Banner description\"\r\n                />\r\n                <div className=\"mt-5 flex justify-end gap-3\">\r\n                  <Button\r\n                    onClick={() => setEdit((s) => !s)}\r\n                    variant=\"text\"\r\n                    color={edit ? \"red\" : \"blue\"}\r\n                  >\r\n                    {edit ? \"cancel\" : \"edit\"}\r\n                  </Button>\r\n                  <Button type=\"submit\">Save</Button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerDetails;\r\n","import React from \"react\";\r\n\r\nexport default function PreviewImage({ file }) {\r\n  const [preview, setPreview] = React.useState({});\r\n\r\n  if (file) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setPreview(reader.result);\r\n    };\r\n  }\r\n\r\n  return <img src={preview} alt=\"preview\" />;\r\n}\r\n"],"names":["DefaultSpinner","_jsx","className","children","Spinner","validationSchema","Yup","shape","title","required","desc","imageValidationSchema","changedImage","test","value","includes","type","dispatch","useDispatch","navigate","useNavigate","bannerId","useParams","loading","useSelector","s","_s$adminBanner","adminBanner","uploading","uploadImg","banner","_s$adminBanner2","fileInputRef","React","_React$useState","_React$useState2","_slicedToArray","edit","setEdit","formik","useFormik","initialValues","onSubmit","values","payload","_id","updates","handleBannerDetailsUpdate","then","response","_response$payload","_response$errors","errors","Swal","message","image","handleImgUpload","handleFetchingBannerDetails","setFieldValue","file","text","width","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","handleImageUpload","_response$payload4","_response$errors3","secure_url","cloudinaryImgUrl","handleBannerImageChange","_response$payload5","_response$errors4","resetForm","window","location","reload","Loading","_jsxs","onClick","BiArrowBack","size","console","log","handleBannerDeleteing","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_response$payload3","_response$errors2","wrap","_context","prev","next","abrupt","stop","_x","apply","arguments","MdDelete","color","PreviewImage","src","alt","ref","onChange","current","files","hidden","click","handleSubmit","Input","_objectSpread","disabled","getFieldProps","variant","label","Textarea","Button","preview","setPreview","reader","FileReader","readAsDataURL","onload"],"sourceRoot":""}