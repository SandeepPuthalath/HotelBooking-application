{"version":3,"file":"static/js/253.f762ce7a.chunk.js","mappings":"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","sources":["pages/HelpDesk.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { BsPersonCircle } from \"react-icons/bs\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Configs } from \"../config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { viewAllHotels } from \"../redux/reducers/hotel/hotelThunk\";\r\nimport {\r\n  addNewMesssage,\r\n  handleFetchingMessages,\r\n} from \"../redux/reducers/chats/userChatReducer\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n\r\nconst Chats = ({ socket, _id, name }) => {\r\n  return (\r\n    <div className=\" flex items-center px-2 py-1 border border-gray-50 shadow-sm hover:bg-gray-200\">\r\n      <div className=\"px-2 py-2\">\r\n        <BsPersonCircle className=\"text-gray-700\" size={38} />\r\n      </div>\r\n      <div className=\"w-full flex flex-col\">\r\n        <div className=\"2-full flex justify-between items-center-center\">\r\n          <h3 className=\"text-gray-900 font-semibold text-md\">{name}</h3>\r\n        </div>\r\n        <p className=\"text-xs\">This is the last message</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Messages = ({ socket, message }) => {\r\n  const you = useSelector((s) => s.user?.data?.applicantId);\r\n\r\n  return (\r\n    <div\r\n      className={`w-full flex ${\r\n        message?.sender === you ? \"justify-start\" : \"justify-end\"\r\n      }`}\r\n    >\r\n      <div\r\n        className={`${\r\n          message?.sender === you\r\n            ? \"bg-gray-900 text-gray-50\"\r\n            : \"bg-gray-50 text-gray-900\"\r\n        } px-5 py-2 rounded-md`}\r\n      >\r\n        <span\r\n          className={`text-sm font-semibold ${\r\n            message?.sender === you ? \"text-green-400\" : \" text-blue-400\"\r\n          } capitalize`}\r\n        >\r\n          {message?.sender === you\r\n            ? \"you\"\r\n            : message?.user?.firstName.concat(message?.user?.lastName)}\r\n        </span>\r\n        <p className=\"text-sm \">{message?.message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HelpDesk = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((s) => s.user?.data?.token);\r\n  const applicantId = useSelector((s) => s.user?.data?.applicantId);\r\n  const hotels = useSelector((s) => s.hotels?.data);\r\n  const messages = useSelector((s) => s.userChat.messages);\r\n  const [hotelId, setHotelId] = React.useState(\"\");\r\n  const [newMessage, setNewMessage] = React.useState(\"\");\r\n  const scrollableDivRef = React.useRef(null);\r\n  const socket = io(Configs.SERVER_URL, {\r\n    query: { token },\r\n  });\r\n\r\n  const handleConnectToChat = (id) => {\r\n    socket.emit(\"join_help_desk\", id);\r\n    socket.on(\"receive_message\", (data) => {\r\n      dispatch(addNewMesssage(data));\r\n    });\r\n    setHotelId(id);\r\n    dispatch(handleFetchingMessages(id));\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    if (scrollableDivRef.current) {\r\n      const scrollableDiv = scrollableDivRef.current;\r\n      scrollableDiv.scrollTop = scrollableDiv.scrollHeight;\r\n    }\r\n  };\r\n\r\n  const handleCloseChat = () => {\r\n    socket.off(\"join_help_desk\");\r\n     socket.off(\"receive_message\");\r\n    setHotelId(\"\");\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (newMessage) {\r\n      const messageData = {\r\n        hotelId: hotelId,\r\n        message: newMessage,\r\n        sender: applicantId,\r\n      };\r\n      socket.emit(\"send_message\", messageData);\r\n      setNewMessage(\"\");\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(viewAllHotels());\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"md:grid grid-cols-6\">\r\n        <div className=\"md:col-span-2 flex flex-col max-h-96 overflow-y-auto\">\r\n          {hotels.map((hotel) => (\r\n            <div\r\n              key={hotel?._id}\r\n              className=\"cursor-pointer\"\r\n              onClick={() => handleConnectToChat(hotel?._id)}\r\n            >\r\n              <Chats {...hotel} socket={socket} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"md:col-span-4 \">\r\n          <div className=\"w-full relative\">\r\n           { hotelId && <div onClick={handleCloseChat} className=\"absolute right-0 px-6 py-3 cursor-pointer rounded-full\">\r\n            <AiOutlineClose className=\"text-red-600 shadow-lg border bg-gray-500 border-gray-500 rounded-full p-1\" size={30}/>\r\n            </div>}\r\n          </div>\r\n          <div\r\n            ref={scrollableDivRef}\r\n            className=\"bg-gray-600 w-full max-h-[21rem] min-h-[21rem] flex flex-col gap-5 overflow-y-auto px-10 py-10\"\r\n          >\r\n            {hotelId &&\r\n              messages &&\r\n              messages.map((message) => (\r\n                <Messages\r\n                  key={message?._id}\r\n                  socket={socket}\r\n                  message={message}\r\n                />\r\n              ))}\r\n          </div>\r\n          <div className=\"border-t border-gray-200 flex justify-center items-center gap-5 w-full px-5 py-2\">\r\n            <input\r\n              value={newMessage}\r\n              onChange={(event) => setNewMessage(event.target.value)}\r\n              type=\"text\"\r\n              className=\"w-full py-2 px-2 bg-transparent border-b-2 border-gray-500 focus::border-none\"\r\n              placeholder=\"Type somthing here ....\"\r\n            />\r\n            <button\r\n              onClick={handleSendMessage}\r\n              className=\"bg-gray-900 px-4 py-1 rounded-md text-sm font-bold border-2 border-gray-900 hover:bg-gray-100 hover:text-gray-900 text-gray-50 \"\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HelpDesk;\r\n"],"names":["Chats","_ref","socket","_id","name","_jsxs","className","children","_jsx","BsPersonCircle","size","Messages","_ref2","_message$user","_message$user2","message","you","useSelector","s","_s$user","_s$user$data","user","data","applicantId","concat","sender","firstName","lastName","dispatch","useDispatch","token","_s$user2","_s$user2$data","_s$user3","_s$user3$data","hotels","_s$hotels","messages","userChat","_React$useState","React","_React$useState2","_slicedToArray","hotelId","setHotelId","_React$useState3","_React$useState4","newMessage","setNewMessage","scrollableDivRef","io","Configs","SERVER_URL","query","viewAllHotels","current","scrollableDiv","scrollTop","scrollHeight","scrollToBottom","map","hotel","onClick","id","emit","on","addNewMesssage","handleFetchingMessages","_objectSpread","off","AiOutlineClose","ref","value","onChange","event","target","type","placeholder","messageData"],"sourceRoot":""}