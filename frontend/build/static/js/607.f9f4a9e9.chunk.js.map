{"version":3,"file":"static/js/607.f9f4a9e9.chunk.js","mappings":"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","sources":["components/auth/Loading.jsx","components/user/GSTDialog.jsx","pages/Profile.jsx"],"sourcesContent":["import { Spinner } from \"@material-tailwind/react\";\r\nimport React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"bg-black bg-opacity-50  backdrop-filter backdrop-blur-sm absolute z-50 top-0 left-0 w-full h-full flex justify-center items-center\">\r\n      <Spinner className=\"h-16 w-16 text-blue-500/10\" />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { handleRoleChangeApplication } from \"../../redux/reducers/applications/applicationReducer\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst GSTDialog = ({ isOpen, onClose, name, applicantId }) => {\r\n  const dispatch = useDispatch();\r\n  const validationSchema = Yup.object().shape({\r\n    GSTNumber: Yup.string()\r\n      .required(\"GST Number is required\")\r\n      .matches(\r\n        /^\\d{2}[A-Z]{5}\\d{4}[A-Z]{1}[A-Z\\d]{1}[Z]{1}[A-Z\\d]{1}$/,\r\n        \"Invalid GST Number\"\r\n      ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      gstNumber: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      // Handle form submission\r\n      values.name = name;\r\n      values.applicantId = applicantId;\r\n     await dispatch(handleRoleChangeApplication(values)).then((response) => {\r\n        console.log(response);\r\n        if(response.errors){\r\n          return toast.error(\"something went wrong\")\r\n        }\r\n        toast.success(\"Application has been successfully submited\")\r\n        onClose()\r\n      });\r\n    },\r\n  });\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center backdrop-blur\">\r\n      <div className=\"bg-white w-96 rounded shadow-md p-6\">\r\n        <h2 className=\"text-xl mb-4\">GST Number</h2>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"w-full p-2 mb-4 border rounded\"\r\n            placeholder=\"GST Number\"\r\n            {...formik.getFieldProps(\"GSTNumber\")}\r\n          />\r\n          {formik.touched.gstNumber && formik.errors.gstNumber && (\r\n            <div className=\"text-red-500 mb-2\">{formik.errors.gstNumber}</div>\r\n          )}\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"mr-2 px-4 py-2 bg-gray-500 text-white rounded\"\r\n              onClick={onClose}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-4 py-2 bg-blue-500 text-white rounded\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GSTDialog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  updateUserProfile,\r\n} from \"../redux/reducers/thunks/userThunks\";\r\nimport GSTDialog from \"../components/user/GSTDialog\";\r\n// import ProfilePageSkeleton from \"../components/Shimmers/ProfilePageSkeleton\";\r\nimport { IoAdd } from \"react-icons/io5\";\r\nimport { handleImageUpload } from \"../redux/reducers/imageUpload/imageUploadSlice\";\r\nimport { handleUpdateProfileImage } from \"../redux/reducers/user/userSlice\";\r\nimport { Spinner } from \"@material-tailwind/react\";\r\nimport Loading from \"../components/auth/Loading\";\r\n\r\nconst ProfilePage = () => {\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector((s) => s.user.data?.applicantId);\r\n  const profileData = useSelector((s) => s.userProfile.data);\r\n  const uploading = useSelector((s) => s.uploadImg.loading);\r\n  const loading = useSelector((s) => s.userProfile?.loading);\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [edit, setEdit] = React.useState(false);\r\n\r\n  // Simulating profile data fetch from the backend\r\n  useEffect(() => {\r\n    // Replace this with your actual data fetching logic\r\n    const fetchProfileData = async () => {\r\n      try {\r\n        // Simulating API call delay\r\n        dispatch(getUserProfile(userId));\r\n        setAvatar(profileData?.pic);\r\n        formik.setValues(profileData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProfileData();\r\n  }, []);\r\n\r\n  const handleUpload = (event) => {\r\n    // File upload logic\r\n    setAvatar(URL.createObjectURL(event.target.files[0]));\r\n    dispatch(handleImageUpload(event.target.files[0])).then((response) => {\r\n      const { secure_url } = response.payload;\r\n      dispatch(handleUpdateProfileImage({ userId, secure_url }));\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    firstName: Yup.string().required(\"First Name is required\"),\r\n    lastName: Yup.string().required(\"Last Name is required\"),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    phoneNumber: Yup.string().required(\"Phone Number is required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      phoneNumber: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      // Handle form submission\r\n      const updates = {\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        email: values.email,\r\n        phoneNumber: values.phoneNumber,\r\n      };\r\n      dispatch(updateUserProfile({ userId, updates: updates }));\r\n    },\r\n  });\r\n\r\n  // Render loading state if profile data is being fetched\r\n  // if (!loading) {\r\n  //   return (\r\n  //     <div className=\"flex items-center justify-center h-screen\">\r\n  //       <ProfilePageSkeleton />\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  //loading spinner\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto p-6\">\r\n      <section className=\"mb-8\">\r\n        <div className=\"flex items-center justify-center mb-4\">\r\n          <div className=\"w-48 h-48 relative\">\r\n            <div\r\n              className=\"w-full h-full relative bg-gray-300 rounded-full flex items-center justify-center overflow-hidden\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  avatar || profileData?.pic || \"/defaults/blank-profile.png\"\r\n                })`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n              }}\r\n            >\r\n              {uploading && (\r\n                <div className=\"absolute bg-opacity-10 backdrop-filter backdrop-blur-sm w-full h-full flex justify-center items-center\">\r\n                  <Spinner className=\"h-8 w-8\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <label\r\n              htmlFor=\"avatarUpload\"\r\n              className=\"absolute bottom-0 right-0 flex items-center justify-center w-8 h-8 bg-blue-500 text-white rounded-full hover:bg-blue-700 focus:outline-none cursor-pointer\"\r\n            >\r\n              <IoAdd size={16} />\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              className=\"hidden\"\r\n              id=\"avatarUpload\"\r\n              onChange={handleUpload}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"text-gray-600\">Account Type: {profileData?.role}</div>\r\n          <button\r\n            onClick={() => setIsOpen(true)}\r\n            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700 focus:outline-none ml-4\"\r\n          >\r\n            Change Role\r\n          </button>\r\n        </div>\r\n      </section>\r\n      <section className=\"mb-8\">\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-full p-2 border rounded focus:outline-none focus:border-blue-500\"\r\n              placeholder=\"First Name\"\r\n              {...formik.getFieldProps(\"firstName\")}\r\n              disabled={edit}\r\n            />\r\n            {formik.touched.firstName && formik.errors.firstName && (\r\n              <div className=\"text-red-500 mt-1\">{formik.errors.firstName}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-full p-2 border rounded focus:outline-none focus:border-blue-500\"\r\n              placeholder=\"Last Name\"\r\n              {...formik.getFieldProps(\"lastName\")}\r\n              disabled={edit}\r\n            />\r\n            {formik.touched.lastName && formik.errors.lastName && (\r\n              <div className=\"text-red-500 mt-1\">{formik.errors.lastName}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"w-full p-2 border rounded focus:outline-none focus:border-blue-500\"\r\n              placeholder=\"Email\"\r\n              {...formik.getFieldProps(\"email\")}\r\n              disabled={edit}\r\n            />\r\n            {formik.touched.email && formik.errors.email && (\r\n              <div className=\"text-red-500 mt-1\">{formik.errors.email}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <input\r\n              type=\"tel\"\r\n              className=\"w-full p-2 border rounded focus:outline-none focus:border-blue-500\"\r\n              placeholder=\"Phone Number\"\r\n              {...formik.getFieldProps(\"phoneNumber\")}\r\n              disabled={edit}\r\n            />\r\n            {formik.touched.phoneNumber && formik.errors.phoneNumber && (\r\n              <div className=\"text-red-500 mt-1\">\r\n                {formik.errors.phoneNumber}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700 focus:outline-none\"\r\n          >\r\n            Save\r\n          </button>\r\n        </form>\r\n      </section>\r\n      <GSTDialog\r\n        isOpen={isOpen}\r\n        onClose={() => setIsOpen(false)}\r\n        name={profileData?.firstName}\r\n        applicantId={userId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["_jsxs","className","children","_jsx","Spinner","_ref","isOpen","onClose","name","applicantId","dispatch","useDispatch","validationSchema","Yup","shape","GSTNumber","required","matches","formik","useFormik","initialValues","gstNumber","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","handleRoleChangeApplication","then","response","console","log","errors","toast","error","success","stop","_x","apply","arguments","handleSubmit","_objectSpread","type","placeholder","getFieldProps","touched","onClick","userId","useSelector","s","_s$user$data","user","data","profileData","userProfile","uploading","uploadImg","loading","_s$userProfile","_useState","useState","_useState2","_slicedToArray","avatar","setAvatar","_useState3","_useState4","setIsOpen","_React$useState","React","_React$useState2","edit","useEffect","fetchProfileData","getUserProfile","pic","setValues","firstName","lastName","email","phoneNumber","updates","updateUserProfile","Loading","style","backgroundImage","concat","backgroundSize","backgroundPosition","htmlFor","IoAdd","size","accept","id","onChange","event","URL","createObjectURL","target","files","handleImageUpload","secure_url","payload","handleUpdateProfileImage","role","disabled","GSTDialog"],"sourceRoot":""}