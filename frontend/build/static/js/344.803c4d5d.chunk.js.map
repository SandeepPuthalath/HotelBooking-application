{"version":3,"file":"static/js/344.803c4d5d.chunk.js","mappings":"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","sources":["pages/AdminApplications.jsx"],"sourcesContent":["import { Button, Card, Typography } from \"@material-tailwind/react\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  handleFetchingApplications,\r\n  handleRoleChangeApproving,\r\n} from \"../redux/reducers/applications/applicationReducer\";\r\nimport Loading from \"../components/auth/Loading\";\r\nimport { toast } from \"react-toastify\";\r\n// import AdminApplicationImgDialog from \"../components/admin/dialogs/AdminApplicationImgDialog\";\r\n\r\nconst TABLE_HEAD = [\"Name\", \"Applicant id\", \"Applied date\", \"status\", \"Action\"];\r\n\r\nexport default function AdminApplications() {\r\n  const disptach = useDispatch();\r\n  const loading = useSelector((s) => s.application.loading);\r\n  const applications = useSelector((s) => s.application.applications);\r\n  const error = useSelector((s) => s.application.error);\r\n\r\n  React.useEffect(() => {\r\n    disptach(handleFetchingApplications());\r\n  }, [disptach]);\r\n\r\n  const handleApprove = async (applicantId) => {\r\n    console.log(\"Approved\");\r\n    await disptach(handleRoleChangeApproving(applicantId)).then((response) => {\r\n      console.log(response);\r\n      if (response.error) {\r\n        console.log(\"got here\");\r\n        return toast.error(\"Somthing went wrong\");\r\n      }\r\n      return toast.success(\"user has been approved\");\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"overflow-scroll h-full w-full\">\r\n        <table className=\"w-full min-w-max table-auto text-left\">\r\n          <thead>\r\n            <tr>\r\n              {TABLE_HEAD.map((head) => (\r\n                <th\r\n                  key={head}\r\n                  className=\"border-b border-blue-gray-100 bg-blue-gray-50 p-4\"\r\n                >\r\n                  <Typography\r\n                    variant=\"small\"\r\n                    color=\"blue-gray\"\r\n                    className=\"font-normal leading-none opacity-70\"\r\n                  >\r\n                    {head}\r\n                  </Typography>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {applications?.map(\r\n              (\r\n                { _id, name, applicantId, GSTNumber, createdAt, status },\r\n                index\r\n              ) => {\r\n                const isLast = index === applications.length - 1;\r\n                const classes = isLast\r\n                  ? \"p-4\"\r\n                  : \"p-4 border-b border-blue-gray-50\";\r\n\r\n                return (\r\n                  <tr key={applicantId}>\r\n                    <td className={classes}>\r\n                      <Typography\r\n                        variant=\"small\"\r\n                        color=\"blue-gray\"\r\n                        className=\"font-normal\"\r\n                      >\r\n                        {name}\r\n                      </Typography>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <Typography\r\n                        variant=\"small\"\r\n                        color=\"blue-gray\"\r\n                        className=\"font-normal\"\r\n                      >\r\n                        {applicantId}\r\n                      </Typography>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <Typography\r\n                        variant=\"small\"\r\n                        color=\"blue-gray\"\r\n                        className=\"font-normal\"\r\n                      >\r\n                        {createdAt.split(\"T\")[0]}\r\n                      </Typography>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <Typography\r\n                        variant=\"small\"\r\n                        color={status === \"pending\" ? \"orange\" : \"green\"}\r\n                        className=\"font-normal capitalize\"\r\n                      >\r\n                        {status}\r\n                      </Typography>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <Button\r\n                        variant=\"filled\"\r\n                        size=\"sm\"\r\n                        disabled={status !== \"pending\"}\r\n                        color={status === \"pending\" ? \"green\" : \"gray\"}\r\n                        className=\"font-medium shadow-none hover:shadow-none rounded-sm\"\r\n                        onClick={() => handleApprove(_id)}\r\n                      >\r\n                        {status === \"pending\" ? \"Approve\" : \"Approved\"}\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n"],"names":["TABLE_HEAD","AdminApplications","disptach","useDispatch","loading","useSelector","s","application","applications","error","React","handleFetchingApplications","handleApprove","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","applicantId","wrap","_context","prev","next","console","log","handleRoleChangeApproving","then","response","toast","success","stop","_x","apply","arguments","_jsx","Loading","_Fragment","children","Card","className","_jsxs","map","head","Typography","variant","color","_ref2","index","_id","name","createdAt","GSTNumber","status","classes","length","split","Button","size","disabled","onClick"],"sourceRoot":""}