{"version":3,"file":"static/js/892.afe30866.chunk.js","mappings":"iJAWA,IARgB,WACd,OACEA,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qIAAoIC,SAAA,EACjJC,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACH,UAAU,+BAA+B,MAGxD,C,sLCOMI,EAAYC,EAAAA,MAAW,kBAAM,qDAAwC,IAE5D,SAASC,IACtB,IAAMC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAC,IAAAC,EAAA,OAAY,QAAZA,EAAID,EAAEE,cAAM,IAAAD,OAAA,EAARA,EAAUH,OAAO,IAC5CI,GAASH,EAAAA,EAAAA,KAAY,SAAAC,GAAC,IAAAG,EAAA,OAAY,QAAZA,EAAIH,EAAEE,cAAM,IAAAC,OAAA,EAARA,EAAUC,IAAI,IACxCC,GAAWC,EAAAA,EAAAA,MACXC,GAAcR,EAAAA,EAAAA,KAAY,SAACC,GAAC,OAAKA,EAAEQ,aAAaC,MAAM,IACtDD,GAAeT,EAAAA,EAAAA,KAAY,SAAAC,GAAC,IAAAU,EAAA,OAAqB,QAArBA,EAAIV,EAAEW,uBAAe,IAAAD,OAAA,EAAjBA,EAAmBN,IAAI,KAE7DQ,EAAAA,EAAAA,YAAU,WAOR,OALEP,EADCE,GACQM,EAAAA,EAAAA,IAAwBN,IAExBO,EAAAA,EAAAA,MAGJ,kBAAMT,GAASU,EAAAA,EAAAA,MAAoB,CAC5C,GAAG,IAWH,OAAIjB,GAAgBL,EAAAA,EAAAA,KAACuB,EAAAA,EAAO,KAG1B1B,EAAAA,EAAAA,MAAA,WAASC,UAAU,GAAEC,SAAA,EACnBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,GAAEC,UACfC,EAAAA,EAAAA,KAACwB,EAAAA,OAAM,CACLC,SAhBmB,SAACC,GAC5Bd,GAASe,EAAAA,EAAAA,IAAeD,GAC1B,EAeUE,MAAM,uBACNC,KAAK,cAAa9B,SAEjBgB,EAAae,KAAI,SAAChB,GAAW,OAC5Bd,EAAAA,EAAAA,KAAC+B,EAAAA,OAAM,CAAwBC,MAAkB,OAAXlB,QAAW,IAAXA,OAAW,EAAXA,EAAae,KAAK9B,SAC1C,OAAXe,QAAW,IAAXA,OAAW,EAAXA,EAAae,MADQ,OAAXf,QAAW,IAAXA,OAAW,EAAXA,EAAamB,IAEjB,SAIfjC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACkC,EAAAA,OAAM,CACLC,KAAK,KACLC,QA1BW,WACnBC,QAAQC,IAAIxB,GACZF,GAASQ,EAAAA,EAAAA,IAAwBN,GACnC,EAwBUhB,UAAU,mDAAkDC,SAC7D,iBAKLC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACrBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAClCC,EAAAA,EAAAA,KAACuC,EAAAA,WAAU,CAACC,QAAQ,KAAK1C,UAAU,0BAAyBC,SAAC,gBAKjEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UACvCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wDAAuDC,SACnEU,EAAOqB,KAAI,SAACW,GAAK,OAChBzC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAI,CAACC,GAAI,UAAYF,EAAMR,IAAIlC,UAC9BC,EAAAA,EAAAA,KAACE,GAAS0C,EAAAA,EAAAA,GAAA,GAAKH,KAD0B,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOR,IAEtC,UASnB,C","sources":["components/auth/Loading.jsx","pages/Hotels.jsx"],"sourcesContent":["import { Spinner } from \"@material-tailwind/react\";\r\nimport React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"bg-black bg-opacity-50  backdrop-filter backdrop-blur-sm absolute z-50 top-0 left-0 w-full h-full flex justify-center items-center\">\r\n      <Spinner className=\"h-16 w-16 text-blue-500/10\" />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { viewAllHotels } from \"../redux/reducers/hotel/hotelThunk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HotelGridSkeleton from \"../components/Shimmers/HotelGridSkeleton\";\r\nimport {\r\n  Button,\r\n  Option,\r\n  Select,\r\n  Typography,\r\n} from \"@material-tailwind/react\";\r\nimport { handleDestinationSearch } from \"../redux/reducers/hotel/hotelSlice\";\r\nimport Loading from \"../components/auth/Loading\"\r\nimport { removeSearchValue, setSearchValue } from \"../redux/reducers/destination/destinationReducer\";\r\n\r\nconst HotelCard = React.lazy(() => import( \"../components/hotel/hotelCard\"))  \r\n\r\nexport default function Hotels() {\r\n  const loading = useSelector(s => s.hotels?.loading)\r\n  const hotels = useSelector(s => s.hotels?.data)\r\n  const dispatch = useDispatch();\r\n  const destination = useSelector((s) => s.destinations.search);\r\n  const destinations = useSelector(s => s.allDestinations?.data)\r\n\r\n  useEffect(() => {\r\n    if(destination){\r\n      dispatch(handleDestinationSearch(destination));\r\n    } else {\r\n      dispatch(viewAllHotels());\r\n    }\r\n\r\n    return () => dispatch(removeSearchValue())\r\n  }, []);\r\n\r\n  const handleSetSearchValue = (e) => {\r\n    dispatch(setSearchValue(e));\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    console.log(destination)\r\n    dispatch(handleDestinationSearch(destination))\r\n  };\r\n\r\n  if (loading) return <Loading/>;\r\n\r\n  return (\r\n    <section className=\"\">\r\n      <div className=\"flex justify-center gap-2 py-5\">\r\n        <div className=\"\">\r\n          <Select\r\n            onChange={handleSetSearchValue}\r\n            label=\"Select a destination\"\r\n            name=\"destination\"\r\n          >\r\n            {destinations.map((destination) => (\r\n              <Option key={destination?._id} value={destination?.name}>\r\n                {destination?.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n        <div>\r\n          <Button\r\n            size=\"md\"\r\n            onClick={handleSearch}\r\n            className=\"shadow-none rounded-sm bg-gray-900 text-gray-100\"\r\n          >\r\n            Search\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-10 \">\r\n        <div className=\"flex justify-center\">\r\n          <Typography variant=\"h3\" className=\"uppercase font-semibold\">\r\n            Hotels\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-10 py-10 min-h-screen\">\r\n        <div className=\"grid md:grid-cols-3 items-center justify-center gap-5\">\r\n          {hotels.map((hotel) => (\r\n            <Link to={\"/hotel/\" + hotel._id} key={hotel?._id}>\r\n              <HotelCard {...hotel} />\r\n            </Link>\r\n          ))}\r\n          {/* <div className=\"md:col-span-2 max-h-[61vh] overflow-y-scroll no-scrollbar\">\r\n            <div className=\"flex flex-col gap-5\"></div>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":["_jsxs","className","children","_jsx","Spinner","HotelCard","React","Hotels","loading","useSelector","s","_s$hotels","hotels","_s$hotels2","data","dispatch","useDispatch","destination","destinations","search","_s$allDestinations","allDestinations","useEffect","handleDestinationSearch","viewAllHotels","removeSearchValue","Loading","Select","onChange","e","setSearchValue","label","name","map","Option","value","_id","Button","size","onClick","console","log","Typography","variant","hotel","Link","to","_objectSpread"],"sourceRoot":""}