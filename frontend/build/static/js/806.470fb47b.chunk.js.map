{"version":3,"file":"static/js/806.470fb47b.chunk.js","mappings":"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","sources":["pages/AdminUsersView.jsx","../node_modules/@heroicons/react/24/solid/esm/PencilIcon.js"],"sourcesContent":["import { MagnifyingGlassIcon } from \"@heroicons/react/24/outline\";\r\nimport { PencilIcon } from \"@heroicons/react/24/solid\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Input,\r\n  Typography,\r\n  Button,\r\n  CardBody,\r\n  CardFooter,\r\n  Tabs,\r\n  TabsHeader,\r\n  Tab,\r\n  Avatar,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@material-tailwind/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsersData, resetStateUsers } from \"../redux/reducers/UsersView/usersViewSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { cloudName } from \"../config\";\r\n\r\nconst TABS = [\r\n  {\r\n    label: \"All\",\r\n    value: \"all\",\r\n  },\r\n  {\r\n    label: \"Business\",\r\n    value: \"business\",\r\n  },\r\n  {\r\n    label: \"Normal\",\r\n    value: \"normal\",\r\n  },\r\n];\r\n\r\nconst TABLE_HEAD = [\"User\", \"Account type\", \"Created\", \"updatedAt\", \"\"];\r\n\r\nfunction filterUsers(search, users) {\r\n  const filteredData = users.filter((user) =>\r\n    user?.firstName\r\n      .concat(\" \", user?.lastName)\r\n      .toLowerCase()\r\n      .includes(search.toLowerCase())\r\n  );\r\n  return filteredData;\r\n}\r\n\r\nexport default function AdminUsersView() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n  const usersDatas = useSelector((s) => s.usersView?.data);\r\n  const loading = useSelector((s) => s.usersView?.loading);\r\n  const error = useSelector((s) => s.usersView?.error);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsersData());\r\n    setFilteredUsers(usersDatas);\r\n\r\n  }, [dispatch]);\r\n\r\n  if (loading) {\r\n    return <h1>Loading.......</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    const data = filterUsers(e.target.value, usersDatas);\r\n    setFilteredUsers(data);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"h-full w-full\">\r\n      <CardHeader floated={false} shadow={false} className=\"rounded-none\">\r\n        <div className=\"mb-8 flex items-center justify-between gap-8\">\r\n          <div>\r\n            <Typography variant=\"h5\" color=\"blue-gray\">\r\n              User list\r\n            </Typography>\r\n            <Typography color=\"gray\" className=\"mt-1 font-normal\">\r\n              See information about all Users\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody className=\"overflow-scroll px-0\">\r\n        <table className=\"mt-4 w-full min-w-max table-auto text-left\">\r\n          <thead>\r\n            <tr>\r\n              {TABLE_HEAD.map((head) =>(\r\n                <th\r\n                  key={head}\r\n                  className=\"border-y border-blue-gray-100 bg-blue-gray-50/50 p-4\"\r\n                >\r\n                  <Typography\r\n                    variant=\"small\"\r\n                    color=\"blue-gray\"\r\n                    className=\"font-normal leading-none opacity-70\"\r\n                  >\r\n                    {head}\r\n                  </Typography>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredUsers.map(\r\n              (\r\n                {\r\n                  _id,\r\n                  firstName,\r\n                  lastName,\r\n                  email,\r\n                  phoneNumber,\r\n                  GSTNumber,\r\n                  role,\r\n                  createdAt,\r\n                  updatedAt,\r\n                  photo,\r\n                },\r\n                index\r\n              ) => {\r\n                const isLast = index === usersDatas.length - 1;\r\n                const classes = isLast\r\n                  ? \"p-4\"\r\n                  : \"p-4 border-b border-blue-gray-50\";\r\n\r\n                return (\r\n                  <tr key={_id}>\r\n                    <td className={classes}>\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <Avatar\r\n                          src={\r\n                            photo ? `https://res.cloudinary.com/${cloudName}/image/upload/v1689876154/BookIt_uploades/${photo[0]}.jpg` : \"/defaults/default-person-80.png\"\r\n                          }\r\n                          alt={firstName + \" \" + lastName}\r\n                          size=\"sm\"\r\n                        />\r\n                        <div className=\"flex flex-col\">\r\n                          <Typography\r\n                            variant=\"small\"\r\n                            color=\"blue-gray\"\r\n                            className=\"font-normal\"\r\n                          >\r\n                            {firstName + \" \" + lastName}\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"small\"\r\n                            color=\"blue-gray\"\r\n                            className=\"font-normal opacity-70\"\r\n                          >\r\n                            {email}\r\n                          </Typography>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <div className=\"flex flex-col\">\r\n                        <Typography\r\n                          variant=\"small\"\r\n                          color=\"blue-gray\"\r\n                          className=\"font-normal\"\r\n                        >\r\n                          {role.toUpperCase()}\r\n                        </Typography>\r\n                        {GSTNumber && (\r\n                          <Typography\r\n                            variant=\"small\"\r\n                            color=\"blue-gray\"\r\n                            className=\"font-normal opacity-70\"\r\n                          >\r\n                            {GSTNumber}\r\n                          </Typography>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <Typography\r\n                        variant=\"small\"\r\n                        color=\"blue-gray\"\r\n                        className=\"font-normal\"\r\n                      >\r\n                        {createdAt}\r\n                      </Typography>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <Typography\r\n                        variant=\"small\"\r\n                        color=\"blue-gray\"\r\n                        className=\"font-normal\"\r\n                      >\r\n                        {updatedAt}\r\n                      </Typography>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <Tooltip content=\"Edit User\">\r\n                        <IconButton onClick={() => navigate(`/admin/user/${_id}`)} variant=\"text\" color=\"blue-gray\">\r\n                          <PencilIcon className=\"h-4 w-4\" />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </CardBody>\r\n      <CardFooter className=\"flex items-center justify-between border-t border-blue-gray-50 p-4\">\r\n        <Typography variant=\"small\" color=\"blue-gray\" className=\"font-normal\">\r\n          Page 1 of 10\r\n        </Typography>\r\n        <div className=\"flex gap-2\">\r\n          <Button variant=\"outlined\" color=\"blue-gray\" size=\"sm\">\r\n            Previous\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"blue-gray\" size=\"sm\">\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-12.15 12.15a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32L19.513 8.2z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(PencilIcon);\nexport default ForwardRef;"],"names":["TABLE_HEAD","AdminUsersView","dispatch","useDispatch","navigate","useNavigate","usersDatas","useSelector","s","_s$usersView","usersView","data","loading","_s$usersView2","error","_s$usersView3","_useState","useState","_useState2","_slicedToArray","filteredUsers","setFilteredUsers","useEffect","fetchUsersData","_jsx","children","_jsxs","Card","className","CardHeader","floated","shadow","Typography","variant","color","CardBody","map","head","_ref","index","_id","firstName","lastName","email","GSTNumber","phoneNumber","role","createdAt","updatedAt","photo","classes","length","Avatar","src","concat","cloudName","alt","size","toUpperCase","Tooltip","content","IconButton","onClick","PencilIcon","CardFooter","Button","ForwardRef","React","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","Object","assign","xmlns","viewBox","fill","ref","id","d"],"sourceRoot":""}