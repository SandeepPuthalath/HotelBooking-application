{"version":3,"file":"static/js/800.10e6c71b.chunk.js","mappings":"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","sources":["components/admin/banner/AddBanner.jsx","components/auth/Loading.jsx","components/preview/PreviewImage.jsx"],"sourcesContent":["import { Card, Typography } from \"@material-tailwind/react\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GrFormPreviousLink } from \"react-icons/gr\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { handleImageUpload } from \"../../../redux/reducers/imageUpload/imageUploadSlice\";\r\nimport { handleCreateBanner } from \"../../../redux/reducers/admin/AdminBannerReducer\";\r\nimport Loading from \"../../../components/auth/Loading\";\r\nimport Swal from \"sweetalert2\";\r\nimport PreviewImage from \"../../preview/PreviewImage\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string().required(\"please fill this field\"),\r\n  desc: Yup.string().required(\"please fill this field\"),\r\n  cloudinaryImgUrl: Yup.mixed()\r\n    .required(\"please select a image\")\r\n    .test(\r\n      \"FILE_TYPE\",\r\n      \"Invalid file type! please choose jpg\",\r\n      (value) => value && [\"image/jpeg\", \"image/png\"].includes(value.type)\r\n    ),\r\n});\r\n\r\nconst AddBanner = () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((s) => s.adminBanner?.loading);\r\n  const [uploading, setUploading] = React.useState(false);\r\n  const fileInputRef = React.useRef(null);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      desc: \"\",\r\n      cloudinaryImgUrl: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      if (values?.cloudinaryImgUrl) {\r\n        console.log(values);\r\n        setUploading(true);\r\n        dispatch(handleImageUpload(values?.cloudinaryImgUrl)).then(\r\n          (response) => {\r\n            setUploading(false);\r\n            values.cloudinaryImgUrl = response?.payload?.secure_url;\r\n            dispatch(handleCreateBanner(values)).then(async (response) => {\r\n              if (response?.errors) {\r\n                return Swal.fire(\"Error!\", response?.payload?.message, \"error\");\r\n              }\r\n              return Swal.fire(\r\n                \"Banner added!\",\r\n                response?.payload?.message,\r\n                \"success\"\r\n              ).then(() => formik.resetForm());\r\n            });\r\n          }\r\n        );\r\n      }\r\n    },\r\n  });\r\n\r\n\r\n\r\n  if (loading || uploading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"p-5\">\r\n        <div className=\"relative flex justify-center items-center mb-5\">\r\n          <Typography variant=\"h4\">Add banner</Typography>\r\n          <Link to=\"/admin/banners\" className=\"absolute left-0 text-blue-600\">\r\n            <GrFormPreviousLink size={30} />\r\n          </Link>\r\n        </div>\r\n        <div className=\"grid grid-cols-2\">\r\n          <div className=\"col-span-1\">\r\n            <div className=\"px-5 py-5\">\r\n              {formik.values.cloudinaryImgUrl && <PreviewImage file={formik.values.cloudinaryImgUrl} /> }\r\n                {!formik.values.cloudinaryImgUrl && <img src=\"/defaults/default-image.jpg\" alt=\"\" />}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-span-1\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <div className=\"relative z-0 w-full mb-6 group\">\r\n                <input\r\n                  {...formik.getFieldProps(\"title\")}\r\n                  onBlur={formik.handleBlur}\r\n                  className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n                  placeholder=\"\"\r\n                />\r\n                <label className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\">\r\n                  Banner Title\r\n                </label>\r\n                {formik.touched.title && formik.errors.title && (\r\n                  <span className=\"text-red-600\">{formik.errors.title}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"relative z-0 w-full mb-6 group\">\r\n                <textarea\r\n                  {...formik.getFieldProps(\"desc\")}\r\n                  onBlur={formik.handleBlur}\r\n                  type=\"text\"\r\n                  className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n                  placeholder=\" \"\r\n                />\r\n                <label className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\">\r\n                  Description\r\n                </label>\r\n                {formik.touched.desc && formik.errors.desc && (\r\n                  <span className=\"text-red-600\">{formik.errors.desc}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"relative z-0 w-full mb-6 group\">\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={(e => formik.setFieldValue(\"cloudinaryImgUrl\", e.target.files[0]))}\r\n                  className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n                  placeholder=\"\"\r\n                />\r\n                <label className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\">\r\n                  Choose a image\r\n                </label>\r\n                {formik.touched.cloudinaryImgUrl &&\r\n                  formik.errors.cloudinaryImgUrl && (\r\n                    <span className=\"text-red-600\">\r\n                      {formik.errors.cloudinaryImgUrl}\r\n                    </span>\r\n                  )}\r\n              </div>\r\n\r\n              <button\r\n                disabled={loading || uploading ? true : false}\r\n                type=\"submit\"\r\n                className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n              >\r\n                {loading || uploading ? \"loading...\" : \"submit\"}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBanner;\r\n","import { Spinner } from \"@material-tailwind/react\";\r\nimport React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"bg-black bg-opacity-50  backdrop-filter backdrop-blur-sm absolute z-50 top-0 left-0 w-full h-full flex justify-center items-center\">\r\n      <Spinner className=\"h-16 w-16 text-blue-500/10\" />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nexport default function PreviewImage({ file }) {\r\n  const [preview, setPreview] = React.useState({});\r\n\r\n  if (file) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setPreview(reader.result);\r\n    };\r\n  }\r\n\r\n  return <img src={preview} alt=\"preview\" />;\r\n}\r\n"],"names":["validationSchema","Yup","shape","title","required","desc","cloudinaryImgUrl","test","value","includes","type","dispatch","useDispatch","loading","useSelector","s","_s$adminBanner","adminBanner","_React$useState","React","_React$useState2","_slicedToArray","uploading","setUploading","formik","useFormik","initialValues","onSubmit","values","console","log","handleImageUpload","then","response","_response$payload","payload","secure_url","handleCreateBanner","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_response$payload3","_response$payload2","wrap","_context","prev","next","errors","abrupt","Swal","message","resetForm","stop","_x","apply","arguments","_jsx","Loading","children","_jsxs","Card","className","Typography","variant","Link","to","GrFormPreviousLink","size","PreviewImage","file","src","alt","handleSubmit","_objectSpread","getFieldProps","onBlur","handleBlur","placeholder","touched","onChange","e","setFieldValue","target","files","disabled","Spinner","preview","setPreview","reader","FileReader","readAsDataURL","onload","result"],"sourceRoot":""}