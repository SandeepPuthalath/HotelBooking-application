{"version":3,"file":"static/js/952.259cb6ec.chunk.js","mappings":"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","sources":["components/auth/ErrorMessage.jsx","components/auth/Loading.jsx","components/auth/SuccessMessage.jsx","components/auth/SignupForm.jsx","pages/auth/SignupPage.jsx"],"sourcesContent":["import { Alert } from \"@material-tailwind/react\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Icon() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n      strokeWidth={2}\r\n      stroke=\"currentColor\"\r\n      className=\"h-6 w-6\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst ErrorMessage = ({error, open, onClose}) => {\r\n\r\n  console.log(\"error occured\")\r\n  return (\r\n    <div className=\"absolute top-0 w-full p-1\">\r\n      <Alert\r\n        open ={open}\r\n        color=\"red\"\r\n        onClose={onClose}\r\n        icon={<Icon />}\r\n        animate={{\r\n          mount: { y: 0 },\r\n          unmount: { y: 100 },\r\n        }}\r\n      >\r\n        {error}\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { Spinner } from \"@material-tailwind/react\";\r\nimport React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"bg-black bg-opacity-50  backdrop-filter backdrop-blur-sm absolute z-50 top-0 left-0 w-full h-full flex justify-center items-center\">\r\n      <Spinner className=\"h-16 w-16 text-blue-500/10\" />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react'\r\nimport { Alert } from \"@material-tailwind/react\";\r\n \r\nfunction Icon() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n      strokeWidth={2}\r\n      stroke=\"currentColor\"\r\n      className=\"h-6 w-6\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst SuccessMessage = ({open, message, onClose}) => {\r\n  return (\r\n    <div className=\"absolute top-0 w-full p-1\">\r\n      <Alert   open ={open}\r\n        color=\"green\"\r\n        onClose={onClose}\r\n        icon={<Icon />}\r\n        animate={{\r\n          mount: { y: 0 },\r\n          unmount: { y: 100 },\r\n        }}>\r\n       Successfully {message}\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SuccessMessage\r\n","import {\r\n  Card,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Typography,\r\n} from \"@material-tailwind/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userSignup } from \"../../redux/reducers/auth/user/userSignupSlice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  firstName: Yup.string().required(\"First Name is required\"),\r\n  lastName: Yup.string(),\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"Email is required\"),\r\n  phoneNumber: Yup.number()\r\n    .test(\"is-mobile-number\", \"Invalid mobile number\", (value) => {\r\n      const mobileNumberPattern = /^(\\+\\d{1,3}[- ]?)?\\d{10}$/;\r\n      return mobileNumberPattern.test(value);\r\n    })\r\n    .required(\"Mobile number is required\"),\r\n  password: Yup.string().test(\r\n    \"is-strong-password\",\r\n    \"Password must be strong\",\r\n    (value) => {\r\n      // Define your strong password criteria here\r\n      const strongPasswordPattern =\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n      return strongPasswordPattern.test(value);\r\n    }\r\n  ),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm password is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  phoneNumber: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nexport default function SignupForm() {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.signup?.loading);\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: (payloads) => {\r\n      dispatch(userSignup(payloads));\r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex flex-row justify-center items-center\">\r\n      <Card color=\"transparent\" shadow={false}>\r\n        <Typography variant=\"h4\" color=\"blue-gray\">\r\n          Sign Up\r\n        </Typography>\r\n        <Typography color=\"gray\" className=\"mt-1 font-normal\">\r\n          Enter your details to register.\r\n        </Typography>\r\n        <form className=\"mt-8 mb-2 w-80 max-w-screen-lg sm:w-96\">\r\n          <div className=\"mb-4 flex flex-col gap-6\">\r\n            <Input\r\n              label=\"First name\"\r\n              size=\"lg\"\r\n              type=\"text\"\r\n              {...formik.getFieldProps(\"firstName\")}\r\n              error={\r\n                formik.touched.firstName && Boolean(formik.errors.firstName)\r\n              }\r\n            />\r\n            {formik.touched.firstName && formik.errors.firstName && (\r\n              <Typography variant=\"small\" color=\"red\">\r\n                {formik.errors.firstName}\r\n              </Typography>\r\n            )}\r\n            <Input\r\n              label=\"Last name\"\r\n              size=\"lg\"\r\n              type=\"text\"\r\n              {...formik.getFieldProps(\"lastName\")}\r\n              error={formik.touched.lastName && Boolean(formik.errors.lastName)}\r\n            />\r\n            {formik.touched.lastName && formik.errors.lastName && (\r\n              <Typography variant=\"small\" color=\"red\">\r\n                {formik.errors.lastName}\r\n              </Typography>\r\n            )}\r\n            <Input\r\n              label=\"Email\"\r\n              size=\"lg\"\r\n              {...formik.getFieldProps(\"email\")}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n            />\r\n            {formik.touched.email && formik.errors.email && (\r\n              <Typography variant=\"small\" color=\"red\">\r\n                {formik.errors.email}\r\n              </Typography>\r\n            )}\r\n            <Input\r\n              label=\"Phone number\"\r\n              size=\"lg\"\r\n              {...formik.getFieldProps(\"phoneNumber\")}\r\n              error={\r\n                formik.touched.phoneNumber && Boolean(formik.errors.phoneNumber)\r\n              }\r\n            />\r\n            {formik.touched.phoneNumber && formik.errors.phoneNumber && (\r\n              <Typography variant=\"small\" color=\"red\">\r\n                {formik.errors.phoneNumber}\r\n              </Typography>\r\n            )}\r\n            <Input\r\n              label=\"Password\"\r\n              size=\"lg\"\r\n              type=\"password\"\r\n              {...formik.getFieldProps(\"password\")}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n            />\r\n            {formik.touched.password && formik.errors.password && (\r\n              <Typography variant=\"small\" color=\"red\">\r\n                {formik.errors.password}\r\n              </Typography>\r\n            )}\r\n            <Input\r\n              label=\"Confirm password\"\r\n              size=\"lg\"\r\n              type=\"password\"\r\n              {...formik.getFieldProps(\"confirmPassword\")}\r\n              error={\r\n                formik.touched.confirmPassword &&\r\n                Boolean(formik.errors.confirmPassword)\r\n              }\r\n            />\r\n            {formik.touched.confirmPassword &&\r\n              formik.errors.confirmPassword && (\r\n                <Typography variant=\"small\" color=\"red\">\r\n                  {formik.errors.confirmPassword}\r\n                </Typography>\r\n              )}\r\n          </div>\r\n          <Checkbox\r\n            label={\r\n              <Typography\r\n                variant=\"small\"\r\n                color=\"gray\"\r\n                className=\"flex items-center font-normal\"\r\n              >\r\n                I agree the\r\n                <Link className=\"font-medium transition-colors hover:text-blue-500\">\r\n                  &nbsp;Terms and Conditions\r\n                </Link>\r\n              </Typography>\r\n            }\r\n            containerProps={{ className: \"-ml-2.5\" }}\r\n          />\r\n          <Button\r\n            onClick={formik.handleSubmit}\r\n            disabled={loading}\r\n            className=\"mt-6\"\r\n            fullWidth\r\n          >\r\n            Register\r\n          </Button>\r\n          <Typography color=\"gray\" className=\"mt-4 text-center font-normal\">\r\n            Already have an account?{\" \"}\r\n            <Link\r\n              to=\"/login\"\r\n              className=\"font-medium text-blue-500 transition-colors hover:text-blue-700\"\r\n            >\r\n              Sign In\r\n            </Link>\r\n          </Typography>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../../components/auth/Loading\";\r\nimport ErrorMessage from \"../../components/auth/ErrorMessage\";\r\nimport { useEffect } from \"react\";\r\nimport SuccessMessage from \"../../components/auth/SuccessMessage\";\r\nimport SignupForm from \"../../components/auth/SignupForm\";\r\nimport {\r\n  resetSignupError,\r\n  resetSuccesMessage,\r\n} from \"../../redux/reducers/auth/user/userSignupSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SignupPage = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const loading = useSelector((s) => s.signup?.loading);\r\n  const successMessage = useSelector((s) => s.signup?.successMessage);\r\n  const error = useSelector((s) => s.signup?.error);\r\n\r\n  const handleErrorClose = () => {\r\n    dispatch(resetSignupError());\r\n  };\r\n\r\n  const handleSuccesClose = () => {\r\n    setTimeout(() => {\r\n      navigate(\"/login\");\r\n    }, 2000);\r\n    dispatch(resetSuccesMessage());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSuccesMessage());\r\n    dispatch(resetSignupError());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative flex w-screen h-screen justify-center items-center\">\r\n      <SignupForm />\r\n      {loading && <Loading />}\r\n      {error && (\r\n        <ErrorMessage\r\n          error={error}\r\n          open={error ? true : false}\r\n          onClose={handleErrorClose}\r\n        />\r\n      )}\r\n      {successMessage && (\r\n        <SuccessMessage\r\n          open={successMessage ? true : false}\r\n          message={SuccessMessage}\r\n          onClose={handleSuccesClose}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n"],"names":["Icon","_jsx","xmlns","fill","viewBox","strokeWidth","stroke","className","children","strokeLinecap","strokeLinejoin","d","_ref","error","open","onClose","console","log","Alert","color","icon","animate","mount","y","unmount","_jsxs","Spinner","message","validationSchema","Yup","shape","firstName","required","lastName","email","phoneNumber","test","value","password","confirmPassword","oneOf","initialValues","SignupForm","dispatch","useDispatch","loading","useSelector","state","_state$signup","signup","formik","useFormik","onSubmit","payloads","userSignup","resetForm","Card","shadow","Typography","variant","Input","_objectSpread","label","size","type","getFieldProps","touched","Boolean","errors","Checkbox","Link","containerProps","Button","onClick","handleSubmit","disabled","fullWidth","to","navigate","useNavigate","s","_s$signup","successMessage","_s$signup2","_s$signup3","useEffect","resetSuccesMessage","resetSignupError","Loading","ErrorMessage","SuccessMessage","setTimeout"],"sourceRoot":""}