{"version":3,"file":"static/js/3.25420040.chunk.js","mappings":"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","sources":["components/admin/dialogs/AdminApplicationImgDialog.jsx","components/admin/destinationManagement/DestinationTable.jsx","pages/AdminDestinationPage.jsx","../node_modules/@heroicons/react/24/solid/esm/PencilIcon.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogHeader,\r\n  DialogBody,\r\n  DialogFooter,\r\n  Avatar,\r\n  IconButton,\r\n  Typography,\r\n  Input,\r\n  Tooltip,\r\n} from \"@material-tailwind/react\";\r\nimport { cloudName } from \"../../../config\";\r\nimport { FaUpload } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { handleImageUpload } from \"../../../redux/reducers/imageUpload/imageUploadSlice\";\r\nimport Loading from \"../../auth/Loading\";\r\nimport { separatePhotoId } from \"../../../pages/MyHotel\";\r\nimport { PencilIcon } from \"@heroicons/react/24/solid\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n\r\nexport default function AdminApplicationImgDialog({\r\n  open,\r\n  setOpen,\r\n  photo,\r\n  _id,\r\n  name,\r\n}) {\r\n  const disptach = useDispatch();\r\n  const imgLoading = useSelector((s) => s.uploadImg.loading);\r\n  const [isFavorite, setIsFavorite] = React.useState(false);\r\n  const [file, setFile] = React.useState(null);\r\n  const [imgUrl, setImgUrl] = React.useState(\"\");\r\n  const fileSelectRef = React.useRef(null);\r\n  const [edit, setEdit] = React.useState(false);\r\n\r\n  const handleFileSelect = () => fileSelectRef.current.click();\r\n\r\n  const handleOpen = () => setOpen((cur) => !cur);\r\n  const handleIsFavorite = () => setIsFavorite((cur) => !cur);\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile(file);\r\n    setImgUrl(URL.createObjectURL(file));\r\n  };\r\n\r\n  const handleChangeDestinationImg = () => {\r\n    if (!file) {\r\n      return setOpen(false);\r\n    }\r\n    disptach(handleImageUpload(file)).then((response) => {\r\n      console.log(response);\r\n      const urlId = separatePhotoId(response?.payload?.secure_url);\r\n      console.log(urlId);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog className=\"relative\" size=\"lg\" open={open} handler={handleOpen}>\r\n        {imgLoading && <Loading />}\r\n        <DialogHeader className=\"justify-between\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <Avatar\r\n              size=\"sm\"\r\n              variant=\"circular\"\r\n              alt=\"tania andrew\"\r\n              src={\r\n                photo\r\n                  ? `https://res.cloudinary.com/${cloudName}/image/upload/v1689876154/BookIt_uploades/${photo}.jpg`\r\n                  : \"/defaults/default-image.jpg\"\r\n              }\r\n            />\r\n            <div className=\"-mt-px flex justify-center items-center gap-2\">\r\n              {!edit ? (\r\n                <Typography\r\n                  variant=\"small\"\r\n                  color=\"blue-gray\"\r\n                  className=\"font-medium\"\r\n                >\r\n                  {name}\r\n                </Typography>\r\n              ) : (\r\n                <Input value={name} variant=\"outlined\" label=\"name\" />\r\n              )}\r\n              {edit && <Button size=\"sm\">save</Button>}\r\n              <IconButton\r\n                onClick={() => setEdit((s) => !s)}\r\n                variant=\"text\"\r\n                color=\"blue-gray\"\r\n              >\r\n                {!edit ? (\r\n                  <PencilIcon className=\"h-4 w-4\" />\r\n                ) : (\r\n                  <AiOutlineClose\r\n                    color=\"red\"\r\n                    className=\"bg-red-100 rounded-full p-1\"\r\n                    size={20}\r\n                  />\r\n                )}\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\"></div>\r\n        </DialogHeader>\r\n        <DialogBody divider={true} className=\"p-0\">\r\n          <img\r\n            alt=\"nature\"\r\n            className=\"h-[28rem] w-full object-cover object-center\"\r\n            src={\r\n              imgUrl\r\n                ? imgUrl\r\n                : photo\r\n                ? `https://res.cloudinary.com/${cloudName}/image/upload/v1689876154/BookIt_uploades/${photo}.jpg`\r\n                : \"/defaults/default-image.jpg\"\r\n            }\r\n          />\r\n        </DialogBody>\r\n        <DialogFooter className=\"justify-between\">\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outlined\"\r\n            color=\"blue-gray\"\r\n            className=\"flex items-center gap-3\"\r\n            onClick={() => {\r\n              handleFileSelect();\r\n              handleIsFavorite();\r\n            }}\r\n          >\r\n            Choose\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outlined\"\r\n            color=\"blue-gray\"\r\n            className=\"flex items-center gap-3\"\r\n            onClick={handleChangeDestinationImg}\r\n          >\r\n            <FaUpload size={20} />\r\n            Upload\r\n          </Button>\r\n          <input\r\n            onChange={handleImageChange}\r\n            className=\"hidden\"\r\n            ref={fileSelectRef}\r\n            name=\"image\"\r\n            type=\"file\"\r\n          />\r\n        </DialogFooter>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { PencilIcon } from \"@heroicons/react/24/solid\";\r\nimport {\r\n  ArrowDownTrayIcon,\r\n  MagnifyingGlassIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Typography,\r\n  Button,\r\n  CardBody,\r\n  Chip,\r\n  CardFooter,\r\n  Avatar,\r\n  IconButton,\r\n  Tooltip,\r\n  Input,\r\n} from \"@material-tailwind/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../../auth/Loading\";\r\nimport { handleFetchAllDestinations } from \"../../../redux/reducers/admin/destination/destinationsSlice\";\r\nimport { cloudName } from \"../../../config\";\r\nimport AdminApplicationImgDialog from \"../dialogs/AdminApplicationImgDialog\";\r\n\r\nconst TABLE_HEAD = [\"Name\", \"Created at\", \"Updated at\", \"Actions\"];\r\n\r\nexport function DestinationTable() {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((s) => s.allDestinations.loading);\r\n  const data = useSelector((s) => s.allDestinations.data);\r\n  const error = useSelector((s) => s.allDestinations.error);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selected, setSelected] = React.useState(null)\r\n\r\n  React.useEffect(() => {\r\n    dispatch(handleFetchAllDestinations());\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"rounded-none shadow-none\">\r\n        <CardBody className=\"px-0\">\r\n          <table className=\"w-full min-w-max table-auto text-left\">\r\n            <thead>\r\n              <tr>\r\n                {TABLE_HEAD.map((head) => (\r\n                  <th\r\n                    key={head}\r\n                    className=\"border-y border-blue-gray-100 bg-blue-gray-50/50 p-4\"\r\n                  >\r\n                    <Typography\r\n                      variant=\"small\"\r\n                      color=\"blue-gray\"\r\n                      className=\"font-normal leading-none opacity-70\"\r\n                    >\r\n                      {head}\r\n                    </Typography>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map(({ _id, name, photo, createdAt, updatedAt }, index) => {\r\n                const isLast = index === data.length - 1;\r\n                const classes = isLast\r\n                  ? \"p-4\"\r\n                  : \"p-4 border-b border-blue-gray-50\";\r\n\r\n                return (\r\n                  <tr key={index}>\r\n                    <td className={classes}>\r\n                      <div\r\n                        className=\"flex items-center gap-3  cursor-pointer\"\r\n                        onClick={() =>{ \r\n                          setSelected({_id, name, photo})\r\n                          setOpen(true)\r\n                        }}\r\n                      >\r\n                        <Avatar\r\n                          src={\r\n                            photo\r\n                              ? `https://res.cloudinary.com/${cloudName}/image/upload/v1689876154/BookIt_uploades/${photo}.jpg`\r\n                              : \"/defaults/default-image-80.png\"\r\n                          }\r\n                          alt={name}\r\n                          size=\"md\"\r\n                          className=\"border border-blue-gray-50 bg-blue-gray-50/50 object-cover p-1  hover:border-gray-900\"\r\n                        />\r\n                        <Typography\r\n                          variant=\"small\"\r\n                          color=\"blue-gray\"\r\n                          className=\"font-bold\"\r\n                        >\r\n                          {name}\r\n                        </Typography>\r\n                      </div>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <Typography\r\n                        variant=\"small\"\r\n                        color=\"blue-gray\"\r\n                        className=\"font-normal\"\r\n                      >\r\n                        {createdAt.split(\"T\")[0]}\r\n                      </Typography>\r\n                    </td>\r\n                    <td className={classes}>\r\n                      <Typography\r\n                        variant=\"small\"\r\n                        color=\"blue-gray\"\r\n                        className=\"font-normal\"\r\n                      >\r\n                        {updatedAt.split(\"T\")[0]}\r\n                      </Typography>\r\n                    </td>\r\n                    {/* <td className={classes}>\r\n                      <div className=\"w-max\">\r\n                        <Chip\r\n                          size=\"sm\"\r\n                          variant=\"ghost\"\r\n                          value={status}\r\n                          color={\r\n                            status === \"paid\"\r\n                              ? \"green\"\r\n                              : status === \"pending\"\r\n                              ? \"amber\"\r\n                              : \"red\"\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </td> */}\r\n                    {/* <td className={classes}>\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <div className=\"h-9 w-12 rounded-md border border-blue-gray-50 p-1\">\r\n                          <Avatar\r\n                            src={\r\n                              account === \"visa\"\r\n                                ? \"https://demos.creative-tim.com/test/corporate-ui-dashboard/assets/img/logos/visa.png\"\r\n                                : \"https://demos.creative-tim.com/test/corporate-ui-dashboard/assets/img/logos/mastercard.png\"\r\n                            }\r\n                            size=\"sm\"\r\n                            alt={account}\r\n                            variant=\"square\"\r\n                            className=\"h-full w-full object-contain p-1\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                          <Typography\r\n                            variant=\"small\"\r\n                            color=\"blue-gray\"\r\n                            className=\"font-normal capitalize\"\r\n                          >\r\n                            {account.split(\"-\").join(\" \")} {accountNumber}\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"small\"\r\n                            color=\"blue-gray\"\r\n                            className=\"font-normal opacity-70\"\r\n                          >\r\n                            {expiry}\r\n                          </Typography>\r\n                        </div>\r\n                      </div>\r\n                    </td> */}\r\n                    <td className={classes}>\r\n                      <Tooltip content=\"Edit destination\">\r\n                        <IconButton variant=\"text\" color=\"blue-gray\">\r\n                          <PencilIcon className=\"h-4 w-4\" />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n        <CardFooter className=\"flex items-center justify-between border-t border-blue-gray-50 p-4\">\r\n          <Button variant=\"outlined\" color=\"blue-gray\" size=\"sm\">\r\n            Previous\r\n          </Button>\r\n          <div className=\"flex items-center gap-2\">\r\n            <IconButton variant=\"outlined\" color=\"blue-gray\" size=\"sm\">\r\n              1\r\n            </IconButton>\r\n            <IconButton variant=\"text\" color=\"blue-gray\" size=\"sm\">\r\n              2\r\n            </IconButton>\r\n            <IconButton variant=\"text\" color=\"blue-gray\" size=\"sm\">\r\n              3\r\n            </IconButton>\r\n            <IconButton variant=\"text\" color=\"blue-gray\" size=\"sm\">\r\n              ...\r\n            </IconButton>\r\n            <IconButton variant=\"text\" color=\"blue-gray\" size=\"sm\">\r\n              8\r\n            </IconButton>\r\n            <IconButton variant=\"text\" color=\"blue-gray\" size=\"sm\">\r\n              9\r\n            </IconButton>\r\n            <IconButton variant=\"text\" color=\"blue-gray\" size=\"sm\">\r\n              10\r\n            </IconButton>\r\n          </div>\r\n          <Button variant=\"outlined\" color=\"blue-gray\" size=\"sm\">\r\n            Next\r\n          </Button>\r\n        </CardFooter>\r\n      </Card>\r\n      <AdminApplicationImgDialog open={open} setOpen={setOpen} {...selected}/>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DestinationTable } from \"../components/admin/destinationManagement/DestinationTable\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { Input } from \"@material-tailwind/react\";\r\nimport Loading from \"../components/auth/Loading\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  handleImageUpload,\r\n  resetImgUploadState,\r\n} from \"../redux/reducers/imageUpload/imageUploadSlice\";\r\nimport { separatePhotoId } from \"./MyHotel\";\r\nimport {\r\n  handleAddDestination,\r\n  resetState,\r\n} from \"../redux/reducers/admin/destination/destinationSlice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Pleace enter a name\"),\r\n  photo: Yup.mixed()\r\n    .required(\"Choose an image\")\r\n    // .test(\r\n    //   \"FILE_TYPE\",\r\n    //   \"Invalid file type! please choose jpg\",\r\n    //   (value) => value && [\"image/jpeg\", \"image/png\"].includes(value.type)\r\n    // ),\r\n});\r\n\r\nconst AdminDestinationPage = () => {\r\n  const dispatch = useDispatch();\r\n  const uploadLoading = useSelector((s) => s.uploadImg.loading);\r\n  const [imgUrl, setImgUrl] = React.useState(\"\");\r\n  const [file, setFile] = React.useState(null);\r\n  const [isAdd, setIsAdd] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(resetImgUploadState());\r\n    return () => dispatch(resetState());\r\n  }, [dispatch]);\r\n  const handleFileSelect = (e) => {\r\n    const file = e.target.files[0];\r\n    setFile(file);\r\n    const url = URL.createObjectURL(file);\r\n    formik.setFieldValue(\"photo\", url);\r\n    setImgUrl(url);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      photo: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (payload) => {\r\n      dispatch(handleImageUpload(file)).then(async (response) => {\r\n        payload.photo = separatePhotoId(response?.payload?.secure_url);\r\n        dispatch(handleAddDestination(payload));\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleChange = () => {\r\n    setIsAdd((s) => !s);\r\n    formik.resetForm();\r\n    setFile(null);\r\n    setImgUrl(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-1 py-1\">\r\n      <div className=\"flex flex-col bg-white\">\r\n        <div className=\"flex justify-center items-center py-2\">\r\n          <h3 className=\"font-bold uppercase text-2xl text-gray-900\">\r\n            Destinations\r\n          </h3>\r\n        </div>\r\n        <div className=\"grid gap-2\">\r\n          {isAdd ? (\r\n            <div className=\"\">\r\n              <div className=\"grid md:grid-cols-2 \">\r\n                <div className=\" relative md:col-span-1   border-gray-200 flex justify-center items-center\">\r\n                  <figure className=\"relative px-2 py-2\">\r\n                    {uploadLoading && <Loading />}\r\n                    <img\r\n                      loading=\"lazy\"\r\n                      className=\"md:min-h-[15rem] w-72 md:max-h-[15rem] shadow-sm shadow-gray-500  rounded-md object-cover object-center\"\r\n                      src={\r\n                        imgUrl && !formik.errors.photo\r\n                          ? imgUrl\r\n                          : \"/defaults/default-image.jpg\"\r\n                      }\r\n                      alt=\"destinatiom img\"\r\n                    />\r\n                  </figure>\r\n                  {formik.errors.photo && (\r\n                    <span className=\"absolute top-5 text-red-500\">\r\n                      {formik.errors.photo}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"md:col-span-1 px-10 py-10 md:px-5 md:py-5\">\r\n                  <div className=\"flex flex-col gap-5 justify-center items-center\">\r\n                    <div className=\"w-full text-center text-gray-900 text-md font-semibold uppercase\">\r\n                      Add Destination form\r\n                    </div>\r\n                    <Input\r\n                      {...formik.getFieldProps(\"name\")}\r\n                      error={Boolean(formik.errors.name)}\r\n                      label={\r\n                        formik.errors.name\r\n                          ? \"Please enter the name\"\r\n                          : \"Enter destination name\"\r\n                      }\r\n                    />\r\n                    <Input\r\n                      onChange={handleFileSelect}\r\n                      error={\r\n                        formik.touched.photo && Boolean(formik.errors.photo)\r\n                      }\r\n                      label={\r\n                        formik.errors.name\r\n                          ? \"Please choose and image\"\r\n                          : \"Enter destination name\"\r\n                      }\r\n                      type=\"file\"\r\n                    />\r\n                    <div className=\"w-full flex justify-end items-center gap-2\">\r\n                      <button\r\n                        className=\"bg-red-50 text-red-700 text-sm font-bold uppercase px-3 py-2 rounded-sm\"\r\n                        onClick={handleChange}\r\n                      >\r\n                        cancel\r\n                      </button>\r\n                      <button\r\n                        onClick={formik.handleSubmit}\r\n                        className=\"bg-gray-900 text-gray-50 text-sm font-bold uppercase px-3 py-2 rounded-sm\"\r\n                      >\r\n                        submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex justify-end items-center px-5\">\r\n              <button\r\n                onClick={handleChange}\r\n                className=\"px-3 py-2 bg-blue-700 text-xs text-gray-50 font-semibold uppercase rounded-sm my-1 shadow-md\"\r\n              >\r\n                Add Destination\r\n              </button>\r\n            </div>\r\n          )}\r\n          <div className=\"px-2\">\r\n            <DestinationTable />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDestinationPage;\r\n","import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-12.15 12.15a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32L19.513 8.2z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(PencilIcon);\nexport default ForwardRef;"],"names":["AdminApplicationImgDialog","_ref","open","setOpen","photo","name","_id","disptach","useDispatch","imgLoading","useSelector","s","uploadImg","loading","_React$useState","React","_React$useState2","_slicedToArray","setIsFavorite","_React$useState3","_React$useState4","file","setFile","_React$useState5","_React$useState6","imgUrl","setImgUrl","fileSelectRef","_React$useState7","_React$useState8","edit","setEdit","_jsx","_Fragment","children","_jsxs","Dialog","className","size","handler","cur","Loading","DialogHeader","Avatar","variant","alt","src","concat","cloudName","Input","value","label","Typography","color","Button","IconButton","onClick","AiOutlineClose","PencilIcon","DialogBody","divider","DialogFooter","current","click","handleImageUpload","then","response","_response$payload","console","log","urlId","separatePhotoId","payload","secure_url","FaUpload","onChange","event","target","files","URL","createObjectURL","ref","type","TABLE_HEAD","DestinationTable","dispatch","allDestinations","data","error","selected","setSelected","handleFetchAllDestinations","Card","CardBody","map","head","index","createdAt","updatedAt","classes","length","split","Tooltip","content","CardFooter","_objectSpread","validationSchema","Yup","shape","required","uploadLoading","isAdd","setIsAdd","resetImgUploadState","resetState","formik","useFormik","initialValues","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","_callee","_context","handleAddDestination","stop","_x2","apply","arguments","_x","handleChange","resetForm","errors","getFieldProps","Boolean","e","url","setFieldValue","touched","handleSubmit","ForwardRef","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","Object","assign","xmlns","viewBox","fill","id","d"],"sourceRoot":""}